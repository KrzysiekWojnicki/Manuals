
  CREATE OR REPLACE FORCE VIEW "NAGIOS"."DIRECTPAY_CORRECT_PAYMENTS" ("OPERATOR", "PAYED", "NOTPAYED", "PERCENT") AS
  SELECT stats.operator,
            SUM (stats.payed) AS payed,
            SUM (stats.notpayed) AS notpayed,
            ROUND (
               (SUM (stats.payed) * 100)
               / (SUM (stats.payed) + SUM (stats.notpayed)),
               1)
               AS percent
       FROM (SELECT root.operator,
                    CASE root.key WHEN 'PAYED' THEN 1 ELSE 0 END AS payed,
                    CASE root.key WHEN 'PAYED' THEN 0 ELSE 1 END AS notpayed
               FROM (SELECT /*+ USE_INVISIBLE_INDEXES */
               o.operator,
                            s.key,
                            CASE (SELECT (TO_CHAR (
                                             SYS_EXTRACT_UTC (SYSTIMESTAMP),
                                             'HH24')
                                          - (TO_CHAR (CURRENT_TIMESTAMP,
                                                      'HH24')))
                                    FROM DUAL)
                               WHEN 2
                               THEN
                                  TO_CHAR (o.CREATE_DATE + 2 / 24,
                                           'DD.MM.YYYY HH24:MI:SS')
                               ELSE
                                  TO_CHAR (o.CREATE_DATE + 1 / 24,
                                           'DD.MM.YYYY HH24:MI:SS')
                            END
                               AS created_date
                       FROM    DIRECTPAY.ORDERS o
                            JOIN
                               DIRECTPAY.ORDER_STATUS s
                            ON o.STATUS = s.VALUE
                      WHERE operator IN
                               ('POLAND_ORANGE',
                                'POLAND_ERA',
                                'POLAND_P4',
                                'POLAND_PLUS')
                            AND s.key IN
                                   ('REJECTED', 'LOCKED', 'CANCELED', 'PAYED')
                            AND o.CREATE_DATE >= SYSDATE - 3 / 24) root
              WHERE TO_DATE (root.created_date, 'DD.MM.YYYY HH24:MI:SS') >=
                       SYSDATE - .5 / 24) statsk
   GROUP BY stats.operator
     HAVING ROUND (
               (SUM (stats.payed) * 100)
               / (SUM (stats.payed) + SUM (stats.notpayed)),
               1) < 55

               UNION
               WHERE operator IN
                        ('POLAND_P4')
                     AND s.key IN
                            ('REJECTED', 'LOCKED', 'CANCELED', 'PAYED')
                     AND o.CREATE_DATE >= SYSDATE - 3 / 24) root
       WHERE TO_DATE (root.created_date, 'DD.MM.YYYY HH24:MI:SS') >=
                SYSDATE - .5 / 24) stats
GROUP BY stats.operator
HAVING ROUND (
        (SUM (stats.payed) * 100)
        / (SUM (stats.payed) + SUM (stats.notpayed)),
        1) < 40;
